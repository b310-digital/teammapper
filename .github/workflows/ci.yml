name: Docker Image CI

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main

jobs:
    teammapper-backend-build:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Login to GitHub Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.repository_owner }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Build and export to Docker
              uses: docker/build-push-action@v6
              with:
                  context: .
                  tags: |
                      ghcr.io/b310-digital/teammapper:latest

    teammapper-backend-lint:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4

            - run: npm --prefix teammapper-backend ci

            - run: npm --prefix teammapper-backend run lint

    teammapper-frontend-lint:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4

            - run: npm --prefix teammapper-frontend ci

            - run: npm --prefix teammapper-frontend run lint

    teammapper-frontend-tsc:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4

            - run: npm --prefix teammapper-frontend ci

            - run: npm --prefix teammapper-frontend run tsc

    teammapper-backend-tsc:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4

            - run: npm --prefix teammapper-backend ci

            - run: npm --prefix teammapper-backend run tsc

    teammapper-backend-test-e2e:
        runs-on: ubuntu-latest

        services:
            postgres:
                image: postgres:10.8
                env:
                    POSTGRES_USER: teammapper-user
                    POSTGRES_PASSWORD: teammapper-password
                    POSTGRES_DB: teammapper-backend-test
                ports:
                    # Will assign a random free host port
                    - 5432/tcp
                # Needed because the postgres container does not provide a healthcheck
                options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

        steps:
            - uses: actions/checkout@v4

            - run: npm --prefix teammapper-backend ci

            - run: npm --prefix teammapper-backend run test
              env:
                  POSTGRES_DATABASE: "teammapper-backend-test"
                  POSTGRES_HOST: "localhost"
                  POSTGRES_PASSWORD: "teammapper-password"
                  POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
                  POSTGRES_SSL: false
                  POSTGRES_TEST_DATABASE: "teammapper-backend-test"
                  POSTGRES_TEST_HOST: "localhost"
                  POSTGRES_TEST_PASSWORD: "teammapper-password"
                  POSTGRES_TEST_PORT: ${{ job.services.postgres.ports[5432] }}
                  POSTGRES_TEST_USER: "teammapper-user"
                  POSTGRES_USER: "teammapper-user"
                  POSTGRES_QUERY_TIMEOUT: 10000
                  POSTGRES_STATEMENT_TIMEOUT: 10000

    teammapper-frontend-test:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - run: npm --prefix teammapper-frontend ci
            - run: npm --prefix teammapper-frontend run test